<div class="row my-5">
    <div class="col">
        <h1 class="text-center mb-5">지역검색</h1>
        <div class="row justify-content-end">
            <form class="col-6 col-lg-3 col-md-4" name="frm">
                <div class="input-group">
                    <input class="form-control" placeholder="검색어" name="query" value="인천 버거킹">
                    <button class="btn btn-dark">검색</button>
                </div>
            </form>
        </div>
        <hr>
        <div id="div_locals"></div>
        <div class="text-center" id="div_page">
            <button class="btn btn-dark" id="prev">이전</button>
            <span class="mx-3" id="span_page">1/10</span>
            <button class="btn btn-dark" id="next">다음</button>
        </div>
        <div id="map" style="width:100%;height:400px;" class="my-3"></div> 
    </div>
</div>
<script type="x-handlebars-template" id="temp_locals">
    <table class="table table-striped">
        {{#each documents}}
        <tr>
            <td class="place">{{place_name}}</td>
            <td>{{address_name}}</td>
            <td class="phone">{{phone}}</td>
            <td><button class="btn-dark location" x="{{x}}" y="{{y}}">위치보기</button></td>
            <td><button class="btn-dark btn-sm favorite" local="{{toString @this}}">즐겨찾기</button></td>
        </tr>     
    {{/each}}
    </tr>
</script>
<script>
    Handlebars.registerHelper("toString", function(local){
        return JSON.stringify(local);
    });
</script>

<script type="module">
    //type = "module" <- 시험문제 import 필요
    import {app} from "/javascripts/firebase.js";
    import { getDatabase, ref, set, get } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-database.js";

    const db = getDatabase(app)// 시험문제 매개변수 app
    
    let page=1;
    let query=$(frm.query).val();
    getLocals();

    //즐겨찾기 버튼 클릭                       //시험문제 기말고사 async
    $("#div_locals").on("click", ".favorite", async function() {
        if(sessionStorage.getItem("email")) {
            const locals=JSON.parse($(this).attr("local"))
            

            const ref_favorite = ref(db, `favorite/${sessionStorage.getItem("uid")}/${locals.id}`)
                             //시험문제 기말 고사 await 
            const snapshot = await get(ref_favorite)
            if(snapshot.val()) {
                alert("이미 즐겨찾기 목록에 있습니다.") 
            } else {
                set(ref_favorite, locals)
                alert("즐겨찾기에 등록되었습니다.")
            }

        
        } else {
            sessionStorage.setItem("target", "/locals");
            location.href = "/users/login";
        }
    })


    $("#div_locals").on("click", ".location", function(){
        let x=$(this).attr("x");
        let y=$(this).attr("y");
        var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스
        var options = { //지도를 생성할 때 필요한 기본 옵션
	        center: new kakao.maps.LatLng(y, x), //지도의 중심좌표.
	        level: 3 //지도의 레벨(확대, 축소 정도)
        };
        var map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴
        var markerPosition  = new kakao.maps.LatLng(y, x);  // 마커가 표시될 위치입니다 
        var marker = new kakao.maps.Marker({  // 마커를 생성합니다
            position: markerPosition
        });
        marker.setMap(map);  // 마커가 지도 위에 표시되도록 설정합니다

        let row = $(this).parent().parent();
        let place = row.find(".place").text();
        let phone = row.find(".phone").text();
        var str ="<div style='padding:5px;font-size:12px;'>" + place + "<br>" + phone + "</div>";
        var info=new kakao.maps.InfoWindow({ content:str });
        kakao.maps.event.addListener(marker, "mouseover", function() { 
            info.open(map, marker); 
        });
        kakao.maps.event.addListener(marker, "mouseout", function() {
            info.close(map, marker); 
        });
    });

    $("#next").on("click", function(){
        page++;
        getLocals();    
    });

    $("#prev").on("click", function(){
        page--;
        getLocals();
    });

    $(frm).on("submit", function(e){
        e.preventDefault();
        query=$(frm.query).val();
        if(query=="") {
            alert("검색 내용을 입력하세요!");
            $(frm.query).focus();
        }else{
            page=1;
            getLocals();
        }
    });

    function getLocals(){
        $.ajax({
            type:"get",
            url:"https://dapi.kakao.com/v2/local/search/keyword.json",
            headers:{Authorization:"KakaoAK 65b4c0591600fd46e7194fae2ec7f2e6"},
            data:{query:query, page:page, size:5},
            success:function(data){
                console.log(data);
                let temp=Handlebars.compile($("#temp_locals").html());
                $("#div_locals").html(temp(data));
                (page == 1) ? $("#prev").attr("disabled", true) : $("#prev").attr("disabled", false);
                (data.meta.is_end) ? $("#next").attr("disabled", true) : $("#next").attr("disabled", false);
                
                let last=Math.ceil(data.meta.pageable_count/5);
                if(data.meta.pageable_count>0){
                    $("#div_page").show();
                    $("#span_page").html(page + "/" + last);
                }else{
                    $("#div_page").hide();
                    $("#div_books").html(`<h1 class='text-center'>'${query}' 도서가 존재하지 않습니다.</h1>`)
                }
            }
        })
    }
</script>